# -*- coding: utf-8 -*-
"""PCA_1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RpKqsszk6N_YmkE83J8M9rlQbKXi9tmz
"""

import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
import pandas as pd

# Load the Iris dataset
data = load_iris()
iris_df = pd.DataFrame(data.data, columns=data.feature_names)
iris_df['species'] = data.target

# Exploratory Data Analysis (EDA)
sns.pairplot(iris_df, hue='species', markers=["X", "^", "v"])
plt.show()

# Display summary statistics of the dataset
print(iris_df.describe())

from sklearn.preprocessing import StandardScaler

# Instantiate the StandardScaler
standardizer = StandardScaler()
scaled_features = standardizer.fit_transform(data.data)

import numpy as np

# Calculate the covariance matrix
covariance_matrix = np.cov(scaled_features.T)
print("Covariance Matrix:\n", covariance_matrix)

# Determine the eigenvalues and eigenvectors
eig_vals, eig_vecs = np.linalg.eig(covariance_matrix)

# Display the eigenvalues and eigenvectors
print("Eigenvalues:\n", eig_vals)
print("Eigenvectors:\n", eig_vecs)

# Arrange eigenvectors in descending order based on eigenvalues
indices = np.argsort(eig_vals)[::-1]
sorted_vals = eig_vals[indices]
sorted_vecs = eig_vecs[:, indices]

# Project the standardized data onto the first two principal components
pca_projection = scaled_features.dot(sorted_vecs[:, :2])

# Create a DataFrame for visualization
pca_dataframe = pd.DataFrame(pca_projection, columns=['PC1', 'PC2'])
pca_dataframe['species'] = data.target

# Visualize the PCA-transformed dataset
plt.figure(figsize=(8, 6))
sns.scatterplot(x='PC1', y='PC2', hue='species', data=pca_dataframe, palette='Set1')
plt.title('Iris Dataset PCA Visualization')
plt.show()